services:
  clickhouse:
    environment:
      CLICKHOUSE_DB: skinlytics_analytics
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_USER: default
    image: clickhouse/clickhouse-server:latest
    ports:
    - 9000:9000
    - 8123:8123
    restart: unless-stopped
    volumes:
    - clickhouse_data:/var/lib/clickhouse
    - ./scripts/clickhouse_init.sql:/docker-entrypoint-initdb.d/init.sql
  grafana:
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    image: grafana/grafana:latest
    ports:
    - 3000:3000
    restart: unless-stopped
    volumes:
    - grafana_data:/var/lib/grafana
    - ./monitoring/grafana:/etc/grafana/provisioning
  postgresql:
    environment:
      POSTGRES_DB: skinlytics_prod
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: skinlytics
    image: postgres:15-alpine
    ports:
    - 5432:5432
    restart: unless-stopped
    volumes:
    - postgres_data:/var/lib/postgresql/data
    - ./scripts/postgres_init.sql:/docker-entrypoint-initdb.d/init.sql
  prometheus:
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus
      --web.console.libraries=/etc/prometheus/console_libraries --web.console.templates=/etc/prometheus/consoles
    image: prom/prometheus:latest
    ports:
    - 9090:9090
    restart: unless-stopped
    volumes:
    - ./monitoring/prometheus:/etc/prometheus
  redis:
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    image: redis:7-alpine
    ports:
    - 6379:6379
    restart: unless-stopped
    volumes:
    - redis_data:/data
  skinlytics-api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    depends_on:
    - postgresql
    - clickhouse
    - redis
    environment:
      CLICKHOUSE_URL: clickhouse://default:${CLICKHOUSE_PASSWORD}@clickhouse:9000/skinlytics_analytics
      CSFLOAT_API_KEY: ${CSFLOAT_API_KEY}
      DATABASE_URL: postgresql://skinlytics:${POSTGRES_PASSWORD}@postgresql:5432/skinlytics_prod
      REDIS_URL: redis://redis:6379/0
    ports:
    - 8000:8000
    restart: unless-stopped
    volumes:
    - ./logs:/app/logs
    - ./models:/app/models
version: '3.8'
volumes:
  clickhouse_data: {}
  grafana_data: {}
  postgres_data: {}
  redis_data: {}
